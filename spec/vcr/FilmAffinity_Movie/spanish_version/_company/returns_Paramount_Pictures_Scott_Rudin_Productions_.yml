---
http_interactions:
- request:
    method: get
    uri: https://www.filmaffinity.com/es/film504889.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 12 Oct 2020 21:41:15 GMT
      Server:
      - Apache
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Pragma:
      - no-cache
      Cache-Control:
      - public, max-age=0, must-revalidate
      Set-Cookie:
      - FCD=ztm-FIz81BjwBbPeDUvwr4f9YmiJvyl9q5zTMyvWF2QBpYiR0OBykp2t0sOFQVIZat7fyGvsHQsF1Oehd5I5JwTsBvOVZm9FWqHfUnyjOjcwwhZ3kpy85gShLHgyzRWkCNYe9MqsQu626MqA0tzFbQucjSqFW2ug;
        expires=Sun, 09-Jul-2023 21:41:15 GMT; Max-Age=86400000; path=/; domain=.filmaffinity.com;
        secure; HttpOnly
      - FSID=076aaquc7mke5hdopndvcaihk69ncifhonimoggcf5dpn2bov9hgk5qkvkcg9e0r; path=/;
        domain=.filmaffinity.com; secure; HttpOnly
      - client-data=%7B%22ism%22%3Afalse%2C%22showm%22%3Afalse%2C%22ts%22%3A1602538875%7D;
        expires=Tue, 27-Oct-2020 21:41:15 GMT; Max-Age=1296000
      - client-data=deleted; expires=Thu, 01-Jan-1970 00:00:01 GMT; Max-Age=0
      X-Frame-Options:
      - SAMEORIGIN
      Upgrade:
      - h2,h2c
      Connection:
      - Upgrade
      Vary:
      - Accept-Encoding
      X-Xss-Protection:
      - 1; mode=block
      Content-Length:
      - '14940'
      Content-Type:
      - text/html; charset=utf-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 12 Oct 2020 21:41:15 GMT
recorded_with: VCR 6.0.0
